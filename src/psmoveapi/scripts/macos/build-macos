#!/bin/bash -xe
#
# Script to build macOS binary snapshots of PS Move API
# Thomas Perl <m@thp.io>; 2012-09-28
#
# 2022-08-29: Added support for building on M1 / Apple Silicon
#

if [ $# -eq 0 ]; then
    echo "Usage: $0 [x86_64|arm64]"
    exit 1
fi

MACOS_CPU_ARCH="$1"
shift

case "$MACOS_CPU_ARCH" in
    x86_64)
        echo "Configuring for Intel architecture (x86_64)"
        MACOS_HOMEBREW_LIB=/usr/local/lib
        MACOS_HOMEBREW_INCLUDE=/usr/local/include
        ;;
    arm64)
        echo "Configuring for Apple architecture (arm64)"
        MACOS_HOMEBREW_LIB=/opt/homebrew/lib
        MACOS_HOMEBREW_INCLUDE=/opt/homebrew/include
        ;;
    *)
        echo "Unknown CPU architecture: $MACOS_CPU_ARCH"
        exit 1
        ;;
esac

# Determine PSMoveAPI root dir
PSMOVEAPI_CHECKOUT=$( cd "$( dirname "${BASH_SOURCE[0]}" )"/../../ && pwd )
export PSMOVEAPI_CHECKOUT

export OPENCV_CHECKOUT_DIR="$PSMOVEAPI_CHECKOUT/external/opencv"
export OPENCV_BUILD_DIR="$PSMOVEAPI_CHECKOUT/external/opencv/build-${MACOS_CPU_ARCH}"
export OPENCV_INSTALL_DIR="$OPENCV_CHECKOUT_DIR/build-${MACOS_CPU_ARCH}/install"

# For parallel builds
MAKE_ARGS=-j4

# Enter PS Move API directory to call the following git commands in psmoveapi repository
cd "$PSMOVEAPI_CHECKOUT"

# Git revision identifier
PSMOVEAPI_REVISION=$(git describe --tags)
export PSMOVEAPI_REVISION

# Initialize Submodules of PS Move API
git submodule init
git submodule update

if [ ! -f "$PSMOVEAPI_CHECKOUT/CMakeLists.txt" ]; then
    echo "ERROR: You have to run this script in the PS Move API source root."
    exit 1
fi

# Build libusb-1.0 as universal static library
# needed for the PS3EYEDriver to access the PSEye
# otherwise we'd dynamically link against some the Homebrew libusb
(
    cd "$PSMOVEAPI_CHECKOUT/external/libusb-1.0"
    export ARCHFLAGS="-arch x86_64 -arch arm64"
    export CFLAGS="$CFLAGS $ARCHFLAGS"
    export CXXFLAGS="$CXXFLAGS $ARCHFLAGS"
    ./autogen.sh
    ./configure
    make ${MAKE_ARGS}
)

# Build OpenCV
if [ ! -d "$OPENCV_INSTALL_DIR" ]; then
    cd external
    if [ ! -d opencv ]; then
		git clone --depth 1 --branch 4.x https://github.com/opencv/opencv.git
    fi
    cd opencv

    rm -rf build-$MACOS_CPU_ARCH
    mkdir -p build-$MACOS_CPU_ARCH
    cd build-$MACOS_CPU_ARCH
    cmake -DBUILD_SHARED_LIBS=OFF \
          -DBUILD_PERF_TESTS=OFF \
          -DBUILD_TESTS=OFF \
          -DBUILD_DOCS=OFF \
          -DBUILD_FAT_JAVA_LIB=OFF \
          -DBUILD_PACKAGE=OFF \
          -DBUILD_opencv_apps=OFF \
          -DBUILD_opencv_objdetect=OFF \
          -DBUILD_opencv_photo=OFF \
          -DBUILD_opencv_shape=OFF \
          -DBUILD_opencv_stitching=OFF \
          -DBUILD_opencv_superres=OFF \
          -DBUILD_opencv_ts=OFF \
          -DBUILD_opencv_video=OFF \
          -DBUILD_opencv_videostab=OFF \
          -DBUILD_opencv_world=OFF \
          -DBUILD_opencv_java=OFF \
          -DWITH_EIGEN=OFF \
          -DWITH_OPENEXR=OFF \
          -DWITH_FFMPEG=OFF \
          -DWITH_JASPER=OFF \
          -DWITH_GSTREAMER=OFF \
          -DWITH_GPHOTO2=OFF \
          -DCMAKE_OSX_ARCHITECTURES="$MACOS_CPU_ARCH" \
          -DCMAKE_INSTALL_PREFIX="$(pwd)/install" ..
    make ${MAKE_ARGS}
    make install
fi

# Enter PS Move API directory to build
cd "$PSMOVEAPI_CHECKOUT"

# Build PS Move API
rm -rf build-$MACOS_CPU_ARCH
mkdir build-$MACOS_CPU_ARCH
cd build-$MACOS_CPU_ARCH
cmake -DPSMOVE_USE_PS3EYE_DRIVER=ON \
      -DPSMOVE_BUILD_TRACKER=ON \
      -DPSMOVE_BUILD_NAVCON_TEST=OFF \
      -DPSMOVE_BUILD_JAVA_BINDINGS=ON \
      -DPSMOVE_BUILD_PROCESSING_BINDINGS=ON \
      -DPSMOVE_BUILD_CSHARP_BINDINGS=ON \
      -DCMAKE_OSX_ARCHITECTURES="$MACOS_CPU_ARCH" \
      -DCMAKE_EXE_LINKER_FLAGS=-L$MACOS_HOMEBREW_LIB \
      -DCMAKE_CXX_FLAGS=-I$MACOS_HOMEBREW_INCLUDE \
      -DCMAKE_C_FLAGS=-I$MACOS_HOMEBREW_INCLUDE \
      -DOpenCV_DIR="${OPENCV_BUILD_DIR}" ..
make ${MAKE_ARGS}
